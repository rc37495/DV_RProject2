library("dplyr", lib.loc="~/R/win-library/3.2")
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("jsonlite", lib.loc="~/R/win-library/3.2")
library("htmltools", lib.loc="~/R/win-library/3.2")
library("knitr", lib.loc="~/R/win-library/3.2")
detach("package:htmltools", unload=TRUE)
library("lubridate", lib.loc="~/R/win-library/3.2")
library("markdown", lib.loc="~/R/win-library/3.2")
library("RCurl", lib.loc="~/R/win-library/3.2")
library("tidyr", lib.loc="~/R/win-library/3.2")
setwd("~/DataVisualization/DV_RProject2/01 Data")
setwd("C:/Users/Ray/Downloads/cfs_2012_pumf_csv")
dat = read.csv("cfs_2012_pumf_csv.csv", header = TRUE)
head(dat)''
head(dat)
tail(dat)
?dat
??dat
summary(dat)
help
help(dat)
info(dat)
setwd("~/DataVisualization/DV_RProject2/01 Data")
file_path <- "pp-2015-part1.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
measures <- c("Price")
#measures <- NA # Do this if there are no measures.
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
# Fix date columns, this needs to be done by hand because | needs to be correct.
#                                                        \_/
df$Order_Date <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Order_Date), tz="UTC")))
df$Ship_Date  <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Ship_Date),  tz="UTC")))
# The following is an example of dealing with special cases like making state abbreviations be all upper case.
# df["State"] <- data.frame(lapply(df["State"], toupper))
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
library("tidyr", lib.loc="~/R/win-library/3.2")
library("rmarkdown", lib.loc="~/R/win-library/3.2")
library("RCurl", lib.loc="~/R/win-library/3.2")
library("lubridate", lib.loc="~/R/win-library/3.2")
library("knitr", lib.loc="~/R/win-library/3.2")
library("jsonlite", lib.loc="~/R/win-library/3.2")
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("dplyr", lib.loc="~/R/win-library/3.2")
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from pp-2015-part1"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from pp-2015-part1"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
View(dat)
View(dat)
dnf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from pp-2015-part1"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
setwd("~/DataVisualization/DV_RProject2/01 Data")
file_path <- "pp-2015-part1.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
#str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
measures <- c("Price")
#measures <- NA # Do this if there are no measures.
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
head(df)
names(df)
df$Transfer_Date <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Transfer_Date), tz="UTC")))
head(df)
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
dnf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from PP2015PART1"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
dnf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from PP2015PART1"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(dnf)
summary(df)
dnf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from NEWPP2015PART1"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
ndf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from NEWPP2015PART1"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
ndf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from NEWPP2015PART1"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
ndf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from NEWPP2015PART1"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
head(ndf)
names(ndf)
ndf %>% select('PRICE','COUNTY') %>% tbl_df
ndf %>% select('PRICE') %>% tbl_df
ndf %>% select(PRICE) %>% tbl_df
ndf %>% select(PRICE,COUNTY) %>% tbl_df
ndf %>% select(PRICE,TOWN_CITY) %>% tbl_df
ndf %>% select(PRICE,TOWN_CITY) %>% tbl_df
library("dplyr", lib.loc="~/R/win-library/3.2")
names(ndf)
ndf %>% select(PRICE,TOWN_CITY) %>% tbl_df
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY = LONDON, PRICE > 500000) tbl_df
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY = LONDON, PRICE > 500000) %>% tbl_df
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY = "LONDON", PRICE > 500000) %>% tbl_df
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY == "LONDON", PRICE > 500000) %>% tbl_df
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY == "LONDON") %>% arrange(PRICE) %>% tbl_df
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY == "LONDON") %>% arrange(PRICE) %>% tail(ndf)
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY == "LONDON") %>% arrange(PRICE) %>% tail()
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY == "LONDON") %>% arrange(PRICE) %>% tbl_ndf
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("jsonlite", lib.loc="~/R/win-library/3.2")
library("knitr", lib.loc="~/R/win-library/3.2")
library("lubridate", lib.loc="~/R/win-library/3.2")
library("RCurl", lib.loc="~/R/win-library/3.2")
library("tidyr", lib.loc="~/R/win-library/3.2")
ndf(TOWN_CITY)
View(ndf,TOWN_CITY)
View(ndf,"TOWN_CITY")
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY == "BIRMINGHAM") %>% arrange(PRICE) %>% tbl_ndf
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY == "BIRMINGHAM") %>% arrange(PRICE) %>% tbl_df
?"ggplot2"
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY == "LONDON") %>% arrange(PRICE) %>% ggplot(aes(x = TOWN_CITY, y = PRICE)) + geom_line()
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY == "LONDON") %>% arrange(PRICE) %>% ggplot(aes(y = PRICE)) + geom_line()
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY == "LONDON") %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot()
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY == "BIRMINGHAM") %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot()
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY == "BIRMINGHAM") %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = red)
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY == "BIRMINGHAM") %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red")
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY == "BIRMINGHAM") %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue")
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LONDON")) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot()
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LONDON")) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "pink")
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LONDON")) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "green")
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LONDON")) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red")
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LONDON")) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.color = "blue")
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LONDON")) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue")
ndf %>% select(PRICE,TOWN_CITY) %>% filter((TOWN_CITY %in% c("BIRMINGHAM", "LONDON")), PRICE < 50000) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue")
ndf %>% select(PRICE,TOWN_CITY) %>% filter((TOWN_CITY %in% c("BIRMINGHAM", "LONDON")), PRICE < 500000) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue")
ndf %>% select(PRICE,TOWN_CITY) %>% filter((TOWN_CITY %in% c("BIRMINGHAM", "LONDON")), PRICE < 5000000) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue")
ndf %>% select(PRICE,TOWN_CITY) %>% filter((TOWN_CITY %in% c("BIRMINGHAM", "LONDON")), PRICE < 500000) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue")
ndf %>% select(PRICE,TOWN_CITY) %>% filter((TOWN_CITY %in% c("BIRMINGHAM", "LONDON")), PRICE < 900000) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue")
ndf %>% select(PRICE,TOWN_CITY) %>% filter((TOWN_CITY %in% c("BIRMINGHAM", "LONDON")), PRICE < 1000000) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue")
ndf %>% select(PRICE,TOWN_CITY) %>% filter((TOWN_CITY %in% c("BIRMINGHAM", "LONDON")), PRICE < 1000000) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue", notch = TRUE)
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LONDON")) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue", fill = "white", alpha = .05)
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LONDON")) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue", fill = "grey", alpha = .05)
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LONDON")) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue", fill = "white", alpha = .05)
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LONDON")) %>% arrange(PRICE) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue", fill = "white", alpha = 1)
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LONDON")) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue", fill = "white", alpha = 1)
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LEEDS")) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue", fill = "white", alpha = 1)
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LEEDS","LONDON")) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue", fill = "white", alpha = 1)
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LEEDS","WELLS","ST DAVIDS")) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue", fill = "white", alpha = 1)
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LEEDS")) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue", fill = "white", alpha = 1)
max(ndf$Price)
max(ndf$PRICE)
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LEEDS")) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "white", fill = "blue", alpha = 1)
white
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LEEDS")) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue", fill = "white", alpha = 1)
dnf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from NEWPP2015PART1"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
names(ndf)
summary(ndf)
ndf %>% select(COUNTY)
library("dplyr", lib.loc="~/R/win-library/3.2")
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("knitr", lib.loc="~/R/win-library/3.2")
library("jsonlite", lib.loc="~/R/win-library/3.2")
library("lubridate", lib.loc="~/R/win-library/3.2")
library("RCurl", lib.loc="~/R/win-library/3.2")
library("tidyr", lib.loc="~/R/win-library/3.2")
ndf %>% select(COUNTY)
ndf %>% select(COUNTY) %>% ggplot(aes(x = COUNTY))
ndf %>% select(COUNTY) %>% ggplot(aes(x = COUNTY)) + geom_bar()
ndf %>% select(COUNTY) %>% ggplot(aes(x = DISTRICT)) + geom_bar()
names(ndf)
ndf %>% select(COUNTY) %>% ggplot(aes(x = "DISTRICT")) + geom_bar()
ndf %>% select(DISTRICT) %>% ggplot(aes(x = "DISTRICT")) + geom_bar()
ndf %>% select(DISTRICT) %>% ggplot() + geom_bar()
ndf %>% select(DISTRICT) %>% ggplot(x = COUNTY) + geom_bar()
ndf %>% select(DISTRICT) %>% ggplot(aes(x = COUNTY) + geom_bar()
ndf %>% select(DISTRICT) %>% ggplot(aes(x = COUNTY)) + geom_bar()
ndf %>% select(DISTRICT) %>% ggplot(aes(x = COUNTY)) + geom_bar()
ndf %>% select(COUNTY) %>% ggplot(aes(x = COUNTY)) + geom_bar()
names(ndf)
ndf %>% select(COUNTY,OLD_NEW) %>% ggplot(aes(x = COUNTY, OLD_NEW)) + geom_bar()
ndf %>% select(COUNTY,OLD_NEW) %>% ggplot(aes(x = COUNTY)) + geom_histogram()
ndf %>% select(COUNTY,OLD_NEW) %>% arrange(count) %>% ggplot(aes(x = COUNTY)) + geom_histogram()
ndf %>% select(COUNTY,OLD_NEW) %>% arrange("count") %>% ggplot(aes(x = COUNTY)) + geom_histogram()
ndf %>% select(COUNTY,OLD_NEW) %>% arrange(COUNTY) %>% ggplot(aes(x = COUNTY)) + geom_histogram()
names(ndf)
ndf %>% select(COUNTY,OLD_NEW) %>% ggplot(aes(x = county)) + geom_histogram()
ndf %>% select(COUNTY,OLD_NEW) %>% ggplot(aes(x = COUNTY)) + geom_histogram()
ndf %>% select(COUNTY,OLD_NEW) %>% ggplot(aes(x = COUNTY, y = OLD_NEW)) + geom_histogram()
ndf %>% select(COUNTY,OLD_NEW) %>% ggplot(aes(x = COUNTY, y = OLD_NEW, stat = "identity")) + geom_histogram()
?geom_bar
ndf %>% select(COUNTY,OLD_NEW) %>% ggplot(aes(x = COUNTY, y = OLD_NEW)) + geom_histogram(stat = "identity")
ndf %>% select(COUNTY,OLD_NEW) %>% filter(OLD_NEW == "O") %>% ggplot(aes(x = COUNTY, y = OLD_NEW)) + geom_histogram(stat = "identity")
ndf %>% select(COUNTY,OLD_NEW) %>% filter(OLD_NEW == "O") %>% ggplot(aes(x = COUNTY, y = OLD_NEW)) + geom_histogram()
ndf %>% select(COUNTY,OLD_NEW) %>% ggplot(aes(x = COUNTY)) + geom_histogram()
?"ggplot2"
ndf %>% select(TOWN_CITY,OLD_NEW) %>% filter(TOWN_CITY = "LONDON",OLD_NEW = "O")
ndf %>% select(TOWN_CITY,OLD_NEW) %>% filter(TOWN_CITY = "LONDON",OLD_NEW = "o")
ndf %>% select(TRANSFER_DATE)
ndf %>% select(TOWN_CITY,OLD_NEW) %>% filter(TOWN_CITY = "LONDON",OLD_NEW = "O")
ndf %>% select(TOWN_CITY,OLD_NEW) %>% filter(TOWN_CITY = "LONDON", OLD_NEW = "O")
ndf %>% select(TOWN_CITY,OLD_NEW) %>% filter(TOWN_CITY == "LONDON", OLD_NEW == "O")
ndf %>% select(TOWN_CITY,OLD_NEW) %>% filter(TOWN_CITY == "LONDON", OLD_NEW == "o")
ndf %>% select(TOWN_CITY,OLD_NEW) %>% filter(TOWN_CITY == "LONDON", OLD_NEW == "N")
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LEEDS")) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue", fill = "white", alpha = 1)
o <- ndf %>% select(COUNTY,OLD_NEW) %>% filter(OLD_NEW = "O")
o <- ndf %>% select(COUNTY,OLD_NEW) %>% filter(OLD_NEW == "O")
o
o <- ndf %>% select(COUNTY,OLD_NEW) %>% filter(OLD_NEW == "N")
n <- ndf %>% select(COUNTY,OLD_NEW) %>% filter(OLD_NEW == "Y")
o
count(o)
ndf %>% select(LOCALITY)
names(ndf)
ndf %>% select(DURATION)
ndf %>% select(DURATION, PRICE) %>% arrange(PRICE) %>% ggplot(aes(x = DURATION, y = PRICE)) + geom_point()
ndf %>% select(DURATION, PRICE) %>% mutate(total = cumsum(PRICE)) %>% arrange(total) %>% ggplot(aes(x = DURATION, y = total)) + geom_point()
ndf %>% select(DURATION, PRICE) %>% mutate(total = cumall(PRICE)) %>% arrange(total) %>% ggplot(aes(x = DURATION, y = total)) + geom_point()
ndf %>% select(DURATION, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% arrange(total) %>% ggplot(aes(x = DURATION, y = total)) + geom_point()
ndf %>% select(DURATION, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% arrange(total) %>% ggplot(aes(x = DURATION, y = total)) + geom_bar()
ndf %>% select(DURATION, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% arrange(total) %>% ggplot(aes(x = DURATION, y = total)) + geom_bar(stat = "indentity")
ndf %>% select(DURATION, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% arrange(total) %>% ggplot(aes(x = DURATION, y = total)) + geom_bar(stat = "identity")
ndf %>% select(DURATION, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% arrange(total) %>% ggplot(aes(x = DURATION, y = total)) + geom_bar(stat = "identity", color = "DURATION")
ndf %>% select(DURATION, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% arrange(total) %>% ggplot(aes(x = DURATION, y = total,color = "DURATION")) + geom_bar(stat = "identity")
ndf %>% select(DURATION, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% arrange(total) %>% ggplot(aes(x = DURATION, y = total,color = "total")) + geom_bar(stat = "identity")
?ggplot
ndf %>% select(DURATION, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% arrange(total) %>% ggplot(aes(x = DURATION, y = total)) + geom_bar(stat = "identity")
names(ndf)
ndf %>% select(DISTRICT, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% arrange(total) %>% ggplot(aes(x = DISTRICT, y = total)) + geom_bar(stat = "identity")
ndf %>% select(COUNTY, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% arrange(total) %>% ggplot(aes(x = COUNTY, y = total)) + geom_bar(stat = "identity")
ndf %>% select(COUNTY, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% arrange(PRICE) %>% ggplot(aes(x = COUNTY, y = total)) + geom_bar(stat = "identity")
ndf %>% select(COUNTY, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% arrange(PRICE) %>% ggplot(aes(x = COUNTY, y = total, color = COUNTY)) + geom_bar(stat = "identity")
ndf %>% select(COUNTY, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% arrange(PRICE) %>% ggplot(aes(x = COUNTY, y = total, color = total)) + geom_bar(stat = "identity")
ndf %>% select(COUNTY, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% arrange(PRICE) %>% ggplot(aes(x = COUNTY, y = total)) + geom_bar(stat = "identity")
ndf %>% select(COUNTY, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% tbl_df
ndf %>% select(COUNTY, PRICE) %>% mutate(ntile = ntile(PRICE)) %>% tbl_df
ndf %>% select(COUNTY, PRICE) %>% mutate(ntile = ntile(100,PRICE)) %>% tbl_df
ndf %>% select(COUNTY, PRICE) %>% mutate(ntile = ntile(PRICE,100)) %>% tbl_df
ndf %>% mutate(ntile = ntile(PRICE,100)) %>% select(PRICE,COUNTY,ntile) %>% tbl_df
ndf %>% mutate(ntile = ntile(PRICE,100)) %>% select(COUNTY,ntile) %>% ggplot(aes(x=COUNTY,y=ntile)) + geom_bar()
ndf %>% mutate(ntile = ntile(PRICE,100)) %>% select(COUNTY,ntile) %>% ggplot(aes(x=COUNTY,y=ntile)) + geom_bar(stat = "identity")
ndf %>% mutate(ntile = ntile(PRICE,100)) %>% select(COUNTY,ntile) %>% max(ntile)
ndf %>% mutate(nth = ntile(PRICE,100)) %>% select(COUNTY,ntile) %>% max(nth)
ndf %>% mutate(nth = ntile(PRICE,100)) %>% select(COUNTY,nth) %>% max(nth)
ndf %>% mutate(nth = ntile(PRICE,100)) %>% select(COUNTY,nth) %>% max("nth")
ndf %>% mutate(nth = ntile(PRICE,100)) %>% select(COUNTY,nth) %>% max()
ndf %>% mutate(nth = ntile(PRICE,100)) %>% select(nth) %>% max()
ndf %>% mutate(nth = ntile(PRICE,100)) %>% select(nth) %>% min()
ndf %>% mutate(nth = ntile(PRICE,100)) %>% select(COUNTY,nth) %>% ggplot(aes(x=COUNTY,y=nth)) + geom_bar(stat = "identity")
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt) %>% ggplot(aes(x=COUNTY,y=nt)) + geom_bar(stat = "identity")
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt) %>% filter(nt < 100) %>% ggplot(aes(x=COUNTY,y=nt)) + geom_bar(stat = "identity")
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt) %>% ggplot(aes(x=COUNTY,y=nt)) + geom_bar(stat = "identity")
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(PRICE,COUNTY,nt) %>% ggplot(aes(x=nt)) + geom_bar()
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(PRICE,COUNTY,nt) %>% ggplot(aes(x=nt)) + geom_bar(bandwith = 1)
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(PRICE,COUNTY,nt) %>% ggplot(aes(x=nt)) + geom_bar(bandwith = .1)
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt) %>% ggplot(aes(x=nt,y=COUNTY)) + geom_bar(stat = "identity")
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt) %>% ggplot(aes(x=COUNTY, y=nt)) + geom_bar(stat = "identity")
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt,PRICE) %>% ggplot(aes(x=COUNTY, y=nt)) + geom_bar(stat = "identity")
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt,PRICE) %>% ggplot(aes(x=COUNTY, y=PRICE)) + geom_bar(stat = "identity")
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt,PRICE) %>% arrange(nt) %>% ggplot() + geom_bar()
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt,PRICE) %>% arrange(nt) %>% ggplot(x=COUNTY, y=nt) + geom_bar(stat="identity")
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt,PRICE) %>% arrange(nt) %>% ggplot(x=COUNTY, y=nt) + geom_bar()
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt,PRICE) %>% arrange(nt) %>% ggplot(aes(x=COUNTY, y=nt)) + geom_bar(stat="identity")
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt,PRICE) %>% arrange(nt) %>% tbl_df
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt,PRICE) %>% arrange(nt) %>% ggplot(aes(x=COUNTY, y=PRICE)) + geom_bar(stat="identity")
diamonds %>% mutate(price_percent = cume_dist(price)) %>% arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
ndf %>% select(COUNTY, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% arrange(desc(PRICE)) %>% ggplot(aes(x = COUNTY, y = total)) + geom_bar(stat = "identity")
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LEEDS")) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue", fill = "white", alpha = 1)
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt,PRICE) %>% arrange(nt) %>% tbl_df
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt,PRICE) %>% arrange(nt) %>% tail()
names(ndf)
ndf %>% select(PRICE,TOWN_CITY,PROPERTY_TYPE) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LEEDS")) %>% ggplot(aes(x=TOWN_CITY, y = PRICE, color=)) + geom_boxplot(color = "red", outlier.colour = "blue", fill = "white", alpha = 1)
ndf %>% select(PRICE,TOWN_CITY,PROPERTY_TYPE) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LEEDS")) %>% ggplot(aes(x=TOWN_CITY, y = PRICE, color=PROPERTY_TYPE)) + geom_boxplot(color = "red", fill = "white", alpha = 1)
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LEEDS")) %>% ggplot(aes(x=TOWN_CITY, y = PRICE, color=)) + geom_boxplot(color = "red", outlier.colour = "blue", fill = "white", alpha = 1)
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt,PRICE) %>% arrange(nt) %>% ggplot(aes(x=COUNTY))
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt,PRICE) %>% arrange(nt) %>% ggplot(aes(x=COUNTY)) + geom_jitter()
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(COUNTY,nt,PRICE) %>% arrange(nt) %>% ggplot(aes(x=COUNTY,y=nt)) + geom_point()
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(DURATION,nt,PRICE) %>% arrange(nt) %>% ggplot(aes(x=DURATION,y=nt)) + geom_point()
ndf %>% mutate(nt = ntile(PRICE,100)) %>% select(DURATION,nt,PRICE) %>% arrange(nt) %>% ggplot(aes(y=DURATION,x=nt)) + geom_point()
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LEEDS")) %>% ggplot(aes(x=TOWN_CITY, y = PRICE, color=)) + geom_boxplot(color = "red", outlier.colour = "blue", fill = "white", alpha = 1)
?ggplot
ndf %>% select(PRICE,TOWN_CITY) %>% filter(TOWN_CITY %in% c("BIRMINGHAM", "LEEDS")) %>% ggplot(aes(x=TOWN_CITY, y = PRICE)) + geom_boxplot(color = "red", outlier.colour = "blue", fill = "white", alpha = 1) + labs(y="Price",x="City")
ndf %>% select(COUNTY, PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% arrange(desc(PRICE)) %>% ggplot(aes(x = COUNTY, y = total)) + geom_bar(stat = "identity")
ndf %>% select(COUNTY, PRICE) %>% arrange(PRICE) %>% mutate(total = cumsum(as.numeric(PRICE))) %>% ggplot(aes(x = COUNTY, y = total)) + geom_bar(stat = "identity")
ndf %>% mutate(n = n(COUNTY)) %>% arrange(n) %>% select(COUNTY,PRICE,n) %>% ggplot(aes(x=COUNTY,y=n)) + geom_bar(stat="identity")
ndf %>% mutate(n = count(COUNTY)) %>% arrange(n) %>% select(COUNTY,PRICE,n) %>% ggplot(aes(x=COUNTY,y=n)) + geom_bar(stat="identity")
view(ndf)
tbl_df
ndf %>% tbl_df
head(ndf)
ndf %>% mutate(n = count(COUNTY,"DEVON")) %>% arrange(n) %>% select(COUNTY,PRICE,n) %>% ggplot(aes(x=COUNTY,y=n)) + geom_bar(stat="identity")
ndf %>% mutate(n = count(COUNTY="DEVON")) %>% arrange(n) %>% select(COUNTY,PRICE,n) %>% ggplot(aes(x=COUNTY,y=n)) + geom_bar(stat="identity")
ndf %>% mutate(n = count(COUNTY=="DEVON")) %>% arrange(n) %>% select(COUNTY,PRICE,n) %>% ggplot(aes(x=COUNTY,y=n)) + geom_bar(stat="identity")
ndf %>% view()
ndf %>% tbl_df
ndf %>% select(OLD_NEW,DURATION,PRICE) %>% filter(OLD_NEW %IN% c("N"),DURATION %in% c("L")) %>% ggplot(aes(x=PRICE)) + geom_bar()
ndf %>% select(OLD_NEW,DURATION,PRICE) %>% filter(OLD_NEW %in% c("N"),DURATION %in% c("L")) %>% ggplot(aes(x=PRICE)) + geom_bar()
ndf %>% select(OLD_NEW,DURATION,PRICE) %>% ggplot(aes(x=DURATION,y=OLD_NEW)) + geom_bar()
ndf %>% select(OLD_NEW,DURATION,PRICE) %>% ggplot(aes(x=DURATION,y=OLD_NEW)) + geom_bar(stat="identity")
ndf %>% select(OLD_NEW,DURATION,PRICE) %>% ggplot(aes(x=DURATION,y=OLD_NEW)) + geom_point()
ndf %>% select(OLD_NEW,DURATION,PRICE) %>% ggplot(aes(x=DURATION,y=PRICE)) + geom_bar(stat="identity")
ndf %>% select(OLD_NEW,DURATION,PRICE) %>% filter(OLD_NEW %in% c("Y")) %>% ggplot(aes(x=DURATION,y=PRICE)) + geom_bar(stat="identity")
ndf %>% select(OLD_NEW,DURATION,PRICE) %>% filter(OLD_NEW %in% c(Y)) %>% ggplot(aes(x=DURATION,y=PRICE)) + geom_bar(stat="identity")
ndf %>% select(OLD_NEW,DURATION,PRICE) %>% filter(OLD_NEW == Y) %>% ggplot(aes(x=DURATION,y=PRICE)) + geom_bar(stat="identity")
ndf %>% select(OLD_NEW,DURATION,PRICE) %>% filter(OLD_NEW == "Y") %>% ggplot(aes(x=DURATION,y=PRICE)) + geom_bar(stat="identity")
ndf %>% select(OLD_NEW,DURATION,PRICE) %>% filter(OLD_NEW == "N") %>% ggplot(aes(x=DURATION,y=PRICE)) + geom_bar(stat="identity")
names(ndf)
DISTRICT
head(ndf)
ndf %>% select(TOWN_CITY,DISTRICT,PRICE) %>% filter(TOWN_CITY == "BIRNINGHAM") %>% tbl_df
ndf %>% select(TOWN_CITY,DISTRICT,PRICE) %>% filter(TOWN_CITY == "BIRMINGHAM") %>% tbl_df
ndf %>% select(TOWN_CITY,DISTRICT,PRICE) %>% filter(DISTRICT == "BIRMINGHAM") %>% tbl_df
ndf %>% select(TOWN_CITY,DISTRICT,PRICE) %>% filter(DISTRICT == "BIRMINGHAM") %>% tail()
ndf %>% select(TOWN_CITY,DISTRICT,PRICE) %>% filter(DISTRICT == "BIRMINGHAM") %>% ggplot(aes(x = TOWN_CITY, y = PRICE)) + geom_bar(stat="identity")
ndf %>% select(TOWN_CITY,DISTRICT,PRICE) %>% filter(DISTRICT == "LEEDS") %>% ggplot(aes(x = TOWN_CITY, y = PRICE)) + geom_bar(stat="identity")
ndf %>% select(TOWN_CITY,DISTRICT,PRICE) %>% filter(DISTRICT == "SHEFFIELD") %>% ggplot(aes(x = TOWN_CITY, y = PRICE)) + geom_bar(stat="identity")
ndf %>% select(TOWN_CITY,DISTRICT,PRICE) %>% filter(DISTRICT == "MANCHESTER") %>% ggplot(aes(x = TOWN_CITY, y = PRICE)) + geom_bar(stat="identity")
ndf %>% select(TOWN_CITY,DISTRICT,PRICE) %>% filter(DISTRICT == "LIVERPOOL") %>% ggplot(aes(x = TOWN_CITY, y = PRICE)) + geom_bar(stat="identity")
ndf %>% select(TOWN_CITY,DISTRICT,PRICE) %>% filter(DISTRICT == "LEEDS") %>% ggplot(aes(x = TOWN_CITY, y = PRICE)) + geom_bar(stat="identity")
ndf %>% select(TOWN_CITY,DISTRICT,PRICE,PROPERTY_TYPE) %>% filter(DISTRICT == "LEEDS") %>% ggplot(aes(x = TOWN_CITY, y = PRICE, colour = PROPERTY_TYPE)) + geom_bar(stat="identity")
ndf %>% select(TOWN_CITY,DISTRICT,PRICE,OLD_NEW) %>% filter(DISTRICT == "LEEDS") %>% ggplot(aes(x = TOWN_CITY, y = PRICE, colour = OLD_NEW)) + geom_bar(stat="identity")
ndf %>% select(TOWN_CITY,DISTRICT,PRICE,OLD_NEW) %>% filter(DISTRICT == "LEEDS") %>% arrange(OLD_NEW) %>% ggplot(aes(x = TOWN_CITY, y = PRICE, colour = OLD_NEW)) + geom_bar(stat="identity")
ndf %>% select(TOWN_CITY,DISTRICT,PRICE,OLD_NEW) %>% filter(DISTRICT == "LEEDS") %>% arrange(OLD_NEW) %>% ggplot(aes(x = TOWN_CITY, y = PRICE, colour = OLD_NEW)) + geom_bar(stat="identity") + labs(x = "Town/City,y = "Price)
ndf %>% select(TOWN_CITY,DISTRICT,PRICE,OLD_NEW) %>% filter(DISTRICT == "LEEDS") %>% arrange(OLD_NEW) %>% ggplot(aes(x = TOWN_CITY, y = PRICE, colour = OLD_NEW)) + geom_bar(stat="identity") + labs(x = "Town/City",y = "Price")
ndf %>% select(TOWN_CITY,DISTRICT,PRICE,OLD_NEW) %>% filter(DISTRICT == "LEEDS") %>% arrange(OLD_NEW) %>% ggplot(aes(x = TOWN_CITY, y = PRICE, colour = OLD_NEW)) + geom_bar(stat="identity") + labs(x = "Town/City",y = "Price") + theme((axis.text.x=element_text(angle=50, size=20, vjust=0.5)))
ndf %>% select(TOWN_CITY,DISTRICT,PRICE,OLD_NEW) %>% filter(DISTRICT == "LEEDS") %>% arrange(OLD_NEW) %>% ggplot(aes(x = TOWN_CITY, y = PRICE, colour = OLD_NEW)) + geom_bar(stat="identity") + labs(x = "Town/City",y = "Price") + theme(axis.text.x=element_text(angle=50))
ndf %>% select(TOWN_CITY,DISTRICT,PRICE,OLD_NEW) %>% filter(DISTRICT == "LEEDS") %>% arrange(OLD_NEW) %>% ggplot(aes(x = TOWN_CITY, y = PRICE, colour = OLD_NEW)) + geom_bar(stat="identity") + labs(x = "Town/City",y = "Price") + theme(axis.text.x=element_text(angle=50,color="black"))
ndf %>% select(TOWN_CITY,DISTRICT,PRICE,OLD_NEW) %>% filter(DISTRICT == "LEEDS") %>% arrange(OLD_NEW) %>% ggplot(aes(x = TOWN_CITY, y = PRICE, colour = OLD_NEW)) + geom_bar(stat="identity") + labs(x = "Town/City",y = "Price",title="Leeds District") + theme(axis.text.x=element_text(angle=50,color="black"))
ndf %>% select(TOWN_CITY,DISTRICT,PRICE,OLD_NEW) %>% filter(DISTRICT == "LEEDS") %>% arrange(OLD_NEW) %>% ggplot(aes(x = TOWN_CITY, y = PRICE, colour = OLD_NEW)) + geom_bar(stat="identity") + labs(x = "Town/City",y = "Price",title="Leeds District") + theme(axis.text.x=element_text(angle=50,color="black"))
ndf %>% select(TOWN_CITY,DISTRICT,PRICE,OLD_NEW) %>% filter(DISTRICT == "LEEDS") %>% arrange(OLD_NEW) %>% ggplot(aes(x = TOWN_CITY, y = PRICE, colour = OLD_NEW)) + geom_bar(stat="identity") + labs(x = "Town/City",y = "Price",title="Leeds District") + theme(axis.text.x=element_text(angle=50,color="black")) + theme(plot.background = element_rect(fill="black", colour=NA))
ndf %>% select(TOWN_CITY,DISTRICT,PRICE,OLD_NEW) %>% filter(DISTRICT == "LEEDS") %>% arrange(OLD_NEW) %>% ggplot(aes(x = TOWN_CITY, y = PRICE, colour = OLD_NEW)) + geom_bar(stat="identity") + labs(x = "Town/City",y = "Price",title="Leeds District") + theme(axis.text.x=element_text(angle=50,color="black")) + theme(plot.background = element_rect(colour="black"))
ndf %>% select(TOWN_CITY,DISTRICT,PRICE,OLD_NEW) %>% filter(DISTRICT == "LEEDS") %>% arrange(OLD_NEW) %>% ggplot(aes(x = TOWN_CITY, y = PRICE, colour = OLD_NEW)) + geom_bar(stat="identity") + labs(x = "Town/City",y = "Price",title="Leeds District") + theme(axis.text.x=element_text(angle=50,color="black")) + legend(x=old,y=new)
